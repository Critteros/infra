---
ports:
  web:
    # Redirect HTTP to HTTPS
    redirections:
      entryPoint: 
        to: websecure 
        scheme: https
        pernament: true
  websecure:
    forwardedHeaders:
      trustedIPs: &cloudflare_ips
        # Cloudflare IP ranges for trusted headers
        - 173.245.48.0/20
        - 103.21.244.0/22
        - 103.22.200.0/22
        - 103.31.4.0/22
        - 141.101.64.0/18
        - 108.162.192.0/18
        - 190.93.240.0/20
        - 188.114.96.0/20
        - 197.234.240.0/22
        - 198.41.128.0/17
        - 162.158.0.0/15
        - 104.16.0.0/13
        - 104.24.0.0/14
        - 172.64.0.0/13
        - 131.0.72.0/22
    proxyProtocol:
      trustedIPs: *cloudflare_ips
    middlewares:
      - ingress-xrealip-from-cf@kubernetescrd # Middleware to set X-Real-Ip from Cf-Connecting-Ip header
providers:
  kubernetesGateway:
    enabled: false
  kubernetesIngress:
    enabled: true
    ingressClass: traefik-public
  kubernetesCRD:
    enabled: true
    ingressClass: traefik-public
    allowCrossNamespace: true
tolerations:
  - key: "CriticalAddonsOnly"
    operator: "Exists"
  - key: "node-role.kubernetes.io/control-plane"
    operator: "Exists"
    effect: "NoSchedule"
  - key: "node-role.kubernetes.io/master"
    operator: "Exists"
    effect: "NoSchedule"
nodeSelector:
  node-role.kubernetes.io/control-plane: "true" # Ensure Traefik runs on control plane nodes
service:
  type: LoadBalancer
  spec:
    externalTrafficPolicy: Local # Preserve client IP
    loadBalancerIP: 10.80.80.42  # Set a static IP for the LoadBalancer
deployment:
  kind: DaemonSet # Use DaemonSet to ensure Traefik runs on all control plane nodes
image:
  pullPolicy: Always
experimental:
  plugins:
    htransformation:
      moduleName: "github.com/tomMoulard/htransformation"
      version: "v0.3.3"
additionalArguments: 
  - "--api.insecure=true"  # Enable insecure API access
  - "--api.dashboard=true" # Enable the dashboard
